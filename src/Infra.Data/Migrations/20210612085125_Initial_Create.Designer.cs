// <auto-generated />
using System;
using LiloDash.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LiloDash.Infra.Data.Migrations
{
    [DbContext(typeof(LiloDataContext))]
    [Migration("20210612085125_Initial_Create")]
    partial class Initial_Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("LiloDash.Domain.Model.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("BuildingId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("WhenDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("WhenUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("LiloDash.Domain.Model.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("DeviceId");

                    b.Property<int>("HardwareAddress")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("WhenDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("WhenUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("LiloDash.Domain.Model.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("RoomId");

                    b.Property<Guid>("BuildingId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("WhenDeleted")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("WhenUpdated")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("LiloDash.Domain.Model.Device", b =>
                {
                    b.HasOne("LiloDash.Domain.Model.Room", null)
                        .WithMany("Devices")
                        .HasForeignKey("RoomId")
                        .IsRequired();
                });

            modelBuilder.Entity("LiloDash.Domain.Model.Room", b =>
                {
                    b.HasOne("LiloDash.Domain.Model.Building", null)
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingId")
                        .IsRequired();
                });

            modelBuilder.Entity("LiloDash.Domain.Model.Building", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("LiloDash.Domain.Model.Room", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
